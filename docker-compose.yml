version: '3'
services:
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - .:/workspace:cached
  #   env_file:
  #     - .env
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=development

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - .:/workspace:cached
    ports:
      - "8000:8000"
    depends_on:
      - dev-db
    env_file:
      - .env
    environment:
      - DEV_DATABASE_URL=${DEV_DATABASE_URL}
      - TEST_DATABASE_URL=${TEST_DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=${ENVIRONMENT}

  dev-db:
    image: postgres:latest
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_DEV_USER}
      - POSTGRES_PASSWORD=${POSTGRES_DEV_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DEV_DB}
    ports:
      - "5432:5432"
    expose:
      - "5432"

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
      - dev-db
  # test-db:
  #   image: postgres:latest
  #   volumes:
  #     - postgres_test_data:/var/lib/postgresql/data:cached
  #   env_file:
  #     - .env
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_TEST_DB}
  #     - POSTGRES_PASSWORD=${POSTGRES_TEST_PASSWORD}
  #     - POSTGRES_DB=${POSTGRES_TEST_DB}
  #   ports:
  #     - "5434:5434"
  #   expose:
  #     - "5434"

volumes:
  postgres_dev_data:
  postgres_test_data:
